// This program is a simple vocabulary builder application.
// It allows users to add new words, search for their meanings,
// list all words alphabetically, and quiz themselves on definitions.

#include <iostream>
#include <set>
#include <string>

using namespace std;

// Function to display the menu and get user's choice
char displayMenu() {
    cout << "\n===== Vocabulary Builder Menu =====\n";
    cout << "1. Add a new word\n";
    cout << "2. Search for a word\n";
    cout << "3. List all words\n";
    cout << "4. Quiz yourself\n";
    cout << "5. Exit\n";
    cout << "Enter your choice: ";
    char choice;
    cin >> choice;
    return choice;
}

int main() {
    // Set to store unique words
    set<string> vocabulary;

    char choice;
    do {
        choice = displayMenu();

        switch (choice) {
            case '1': {
                // Add a new word to the vocabulary
                string newWord;
                cout << "Enter the new word: ";
                cin >> newWord;
                vocabulary.insert(newWord);
                cout << "'" << newWord << "' added to vocabulary.\n";
                break;
            }
            case '2': {
                // Search for a word in the vocabulary
                string searchWord;
                cout << "Enter the word to search for: ";
                cin >> searchWord;
                auto it = vocabulary.find(searchWord);
                if (it != vocabulary.end()) {
                    cout << "Meaning of '" << *it << "' found.\n";
                } else {
                    cout << "Word not found in the vocabulary.\n";
                }
                break;
            }
            case '3': {
                // List all words in alphabetical order
                if (vocabulary.empty()) {
                    cout << "Vocabulary is empty.\n";
                } else {
                    cout << "List of words:\n";
                    for (const auto& word : vocabulary) {
                        cout << word << "\n";
                    }
                }
                break;
            }
            case '4': {
                // Quiz the user on word meanings
                if (vocabulary.empty()) {
                    cout << "Vocabulary is empty. Add words to quiz yourself.\n";
                } else {
                    cout << "Quiz mode - Enter 'q' to quit.\n";
                    for (const auto& word : vocabulary) {
                        string answer;
                        cout << "What is the meaning of '" << word << "'? ";
                        cin >> answer;
                        if (answer == "q") {
                            break;
                        }
                    }
                }
                break;
            }
            case '5':
                // Exit the program
                cout << "Exiting Vocabulary Builder.\n";
                break;
            default:
                cout << "Invalid choice. Please enter a valid option.\n";
        }
    } while (choice != '5');

    return 0;
}


"""

EXPLANATION OF THE CODE

The program starts by displaying a menu with options to add a new word, search for a word, list all words, quiz yourself, and exit.
It uses a set<string> named vocabulary to store unique words.
When adding a word (case '1'), it prompts the user for a word and inserts it into the set.
Searching for a word (case '2') allows the user to find the meaning of a word by searching the set.
Listing all words (case '3') displays all words in alphabetical order.
Quiz mode (case '4') quizzes the user on the meanings of words in the vocabulary.
Exiting (case '5') terminates the program.
"""


"""
EXPLANATION OF THE CODE

STL Associative containers (set)
Behavior and API of set
Putting objects into set
Usage scenarios
"""
