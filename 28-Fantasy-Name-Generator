/*
   Fantasy Name Generator

   This program generates fantasy character names using predefined name parts.
   It uses the generate_n algorithm to create a specified number of names.

   Notions covered:
   - generate_n: Generates a sequence of elements based on a function or value.
*/

#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <cstdlib> // For rand() and srand()
#include <ctime>   // For time()

using namespace std;

// Function to generate a fantasy name
string generateFantasyName() {
    // Define arrays of name parts (prefixes and suffixes)
    vector<string> prefixes = {"Thra", "Val", "El", "Dra", "Ara"};
    vector<string> suffixes = {"gon", "thor", "lind", "wyn", "dar"};

    // Randomly select a prefix and suffix
    string prefix = prefixes[rand() % prefixes.size()];
    string suffix = suffixes[rand() % suffixes.size()];

    // Combine prefix and suffix to form the name
    string fantasyName = prefix + suffix;

    return fantasyName;
}

int main() {
    // Seed the random number generator
    srand(static_cast<unsigned int>(time(0)));

    // Number of names to generate
    int numNames = 10;

    // Vector to store generated names
    vector<string> fantasyNames;

    // Generate names using generate_n algorithm
    generate_n(back_inserter(fantasyNames), numNames, generateFantasyName);

    // Display the generated names
    cout << "Generated Fantasy Names:\n";
    for (const auto& name : fantasyNames) {
        cout << name << "\n";
    }

    return 0;
}


"""
EXPLANATION OF THE CODE

Preparation: Import necessary libraries (iostream, fstream, vector, string, cstdlib, ctime).
Function Definition: generateFantasyName() defines arrays of prefixes and suffixes for fantasy names. It randomly selects one prefix and one suffix and concatenates them to form a fantasy name.
Main Function:
Seeds the random number generator (srand() with current time).
Defines numNames as the number of fantasy names to generate.
Initializes a vector fantasyNames to store generated names.
Uses generate_n algorithm to populate fantasyNames with numNames generated by calling generateFantasyName().
Outputs each generated name to the console.
"""


"""
NOTIONS COVERED

generate_n: Generates a sequence of elements (fantasyNames in this case) based on a function (generateFantasyName()).
"""
